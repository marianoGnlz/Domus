// <auto-generated />
using System;
using Domus.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domus.Migrations
{
    [DbContext(typeof(TPIContext))]
    [Migration("20211123194814_Comienzo")]
    partial class Comienzo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domus.Models.Corporativo", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentacionIdDocumentacion")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuenta")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadIdPropiedad")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("DocumentacionIdDocumentacion");

                    b.HasIndex("PropiedadIdPropiedad");

                    b.ToTable("Corporativos");
                });

            modelBuilder.Entity("Domus.Models.Documentacion", b =>
                {
                    b.Property<int>("IdDocumentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocumentacion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.HasKey("IdDocumentacion");

                    b.ToTable("Documentaciones");
                });

            modelBuilder.Entity("Domus.Models.Particular", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CUIL")
                        .HasColumnType("int");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("DocumentacionIdDocumentacion")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuenta")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadIdPropiedad")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("DocumentacionIdDocumentacion");

                    b.HasIndex("PropiedadIdPropiedad");

                    b.ToTable("Particulares");
                });

            modelBuilder.Entity("Domus.Models.Propiedad", b =>
                {
                    b.Property<int>("IdPropiedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPropiedad"), 1L, 1);

                    b.Property<int>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<string>("Artefactos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantBanios")
                        .HasColumnType("int");

                    b.Property<int>("CantHabitaciones")
                        .HasColumnType("int");

                    b.Property<string>("Espacios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPropiedad");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("Domus.Models.Corporativo", b =>
                {
                    b.HasOne("Domus.Models.Documentacion", "Documentacion")
                        .WithMany()
                        .HasForeignKey("DocumentacionIdDocumentacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domus.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadIdPropiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documentacion");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("Domus.Models.Particular", b =>
                {
                    b.HasOne("Domus.Models.Documentacion", "Documentacion")
                        .WithMany()
                        .HasForeignKey("DocumentacionIdDocumentacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domus.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadIdPropiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documentacion");

                    b.Navigation("Propiedad");
                });
#pragma warning restore 612, 618
        }
    }
}
