// <auto-generated />
using System;
using Domus.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domus.Migrations
{
    [DbContext(typeof(TPIContext))]
    partial class TPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domus.Models.Agenda", b =>
                {
                    b.Property<int>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgenda"), 1L, 1);

                    b.Property<int>("CalendarioIdCalendario")
                        .HasColumnType("int");

                    b.HasKey("IdAgenda");

                    b.HasIndex("CalendarioIdCalendario");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("Domus.Models.Calendario", b =>
                {
                    b.Property<int>("IdCalendario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCalendario"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCalendario");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("Domus.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"), 1L, 1);

                    b.Property<int?>("AgendaIdAgenda")
                        .HasColumnType("int");

                    b.Property<int>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.HasKey("IdCita");

                    b.HasIndex("AgendaIdAgenda");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("Domus.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuenta")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Domus.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"), 1L, 1);

                    b.Property<int>("AgendaIdAgenda")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuenta")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("AgendaIdAgenda");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Domus.Models.Horarios", b =>
                {
                    b.Property<int>("IdHorarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorarios"), 1L, 1);

                    b.Property<int?>("CalendarioIdCalendario")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time");

                    b.HasKey("IdHorarios");

                    b.HasIndex("CalendarioIdCalendario");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Domus.Models.Agenda", b =>
                {
                    b.HasOne("Domus.Models.Calendario", "Calendario")
                        .WithMany()
                        .HasForeignKey("CalendarioIdCalendario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendario");
                });

            modelBuilder.Entity("Domus.Models.Cita", b =>
                {
                    b.HasOne("Domus.Models.Agenda", null)
                        .WithMany("Citas")
                        .HasForeignKey("AgendaIdAgenda");

                    b.HasOne("Domus.Models.Cliente", "Cliente")
                        .WithMany("Cita")
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domus.Models.Empleado", b =>
                {
                    b.HasOne("Domus.Models.Agenda", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaIdAgenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("Domus.Models.Horarios", b =>
                {
                    b.HasOne("Domus.Models.Calendario", null)
                        .WithMany("Horarios")
                        .HasForeignKey("CalendarioIdCalendario");
                });

            modelBuilder.Entity("Domus.Models.Agenda", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Domus.Models.Calendario", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("Domus.Models.Cliente", b =>
                {
                    b.Navigation("Cita");
                });
#pragma warning restore 612, 618
        }
    }
}
